<?php
header('Content-Type: text/html; charset=utf-8');
header("Cache-Control: no-cache, no-store, must-revalidate");
header("Pragma: no-cache");
header("Expires: 0");
$version = time();
?>
<!DOCTYPE html>
<html lang="ru">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate">
    <meta http-equiv="Pragma" content="no-cache">
    <meta http-equiv="Expires" content="0">
    <title>–ú–æ–∏ –∑–∞–ø—Ä–æ—Å—ã</title>
    <script src="https://telegram.org/js/telegram-web-app.js?<?= $version ?>"></script>
    <link rel="stylesheet" href="/webapp/css/style.css?<?= $version ?>">
    <link rel="stylesheet" href="/webapp/css/my-services.css?<?= $version ?>">
</head>

<body>
    <div class="container">
        <div class="greeting">–ú–æ–∏ –∑–∞—è–≤–∫–∏</div>
        <a href="/webapp/client/client-form.php?v=<?= $version ?>" class="btn-create">+ –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É</a>
        <div class="requests-list" id="requests-list">
            <div class="request-item">
                <div class="request-service">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
            </div>
        </div>
    </div>

    <script>
        const userData = JSON.parse(localStorage.getItem('userData') || '{}');
        const selectedRole = localStorage.getItem('selectedRole') || sessionStorage.getItem('selectedRole');
        const version = '<?= $version ?>';

        if (!selectedRole || selectedRole !== 'client') {
            window.location.href = '/?v=' + version;
        } else {
            localStorage.setItem('selectedRole', 'client');
            sessionStorage.setItem('selectedRole', 'client');

            if (userData.firstName) {
                document.querySelector('.greeting').textContent = `–ü—Ä–∏–≤–µ—Ç, ${userData.firstName}!`;
            }
        }

        const email = localStorage.getItem('userEmail');
        if (!email) {
            document.getElementById('requests-list').innerHTML = `
                <div class="no-requests">
                    <div class="no-requests-icon">üì≠</div>
                    <h3>–í—ã –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–≤–∞–ª–∏ –∑–∞—è–≤–æ–∫</h3>
                    <p>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É", —á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å –ø–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å</p>
                </div>
            `;
        }
    </script>

    <script src="/webapp/js/bitrix-integration.js?<?= $version ?>"></script>
    <script>
        const email = localStorage.getItem('userEmail');
        if (email) {
            if (typeof BitrixCRM !== 'undefined' && BitrixCRM.getUserRequests) {
                BitrixCRM.getUserRequests(email)
                    .then(response => {
                        const leads = response.result || [];
                        let html = '';

                        if (leads.length === 0) {
                            html = `
                                <div class="no-requests">
                                    <div class="no-requests-icon">üì≠</div>
                                    <h3>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞—è–≤–æ–∫</h3>
                                    <p>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É", —á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å –ø–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å</p>
                                </div>
                            `;
                        } else {
                            leads.forEach(lead => {
                                const date = new Date(lead.DATE_CREATE).toLocaleDateString('ru-RU');
                                const service = lead.UF_CRM_685D2956C64E0 || '–£—Å–ª—É–≥–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞';

                                let statusClass = '';
                                let statusText = lead.STATUS_ID || '–ù–æ–≤—ã–π';

                                if (statusText === 'NEW') {
                                    statusText = '–ù–æ–≤–∞—è';
                                    statusClass = 'status-new';
                                } else if (statusText === 'PROCESSING') {
                                    statusText = '–í —Ä–∞–±–æ—Ç–µ';
                                    statusClass = 'status-processing';
                                } else if (statusText === 'CLOSED') {
                                    statusText = '–ó–∞–≤–µ—Ä—à–µ–Ω–∞';
                                    statusClass = 'status-completed';
                                }

                                html += `
                                    <div class="request-item">
                                        <div class="request-service">${service}</div>
                                        <div class="request-date">–°–æ–∑–¥–∞–Ω–æ: ${date}</div>
                                        <div class="request-status ${statusClass}">${statusText}</div>
                                    </div>
                                `;
                            });
                        }
                        document.getElementById('requests-list').innerHTML = html;
                    })
                    .catch(error => {
                        document.getElementById('requests-list').innerHTML = `
                            <div class="request-item">
                                <div class="request-service">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö</div>
                                <div class="request-date">–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É</div>
                            </div>
                        `;
                    });
            } else {
                document.getElementById('requests-list').innerHTML = `
                    <div class="request-item">
                        <div class="request-service">–°–∏—Å—Ç–µ–º–Ω–∞—è –æ—à–∏–±–∫–∞</div>
                        <div class="request-date">–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</div>
                    </div>
                `;
            }
        }
    </script>
</body>

</html>